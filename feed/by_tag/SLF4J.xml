<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator><link href="https://blog.vepo.dev/feed/by_tag/SLF4J.xml" rel="self" type="application/atom+xml" /><link href="https://blog.vepo.dev/" rel="alternate" type="text/html" /><updated>2025-10-07T11:58:40+00:00</updated><id>https://blog.vepo.dev/feed/by_tag/SLF4J.xml</id><title type="html">vepo</title><subtitle>Um reposit√≥rio para todos os posts, palestras e tutoriais que j√° fiz. Java, Desenvolvimento de Software e reflex√µes sobre filosofia</subtitle><author><name>{&quot;twitter&quot;=&gt;&quot;vepo&quot;, &quot;linkedin&quot;=&gt;&quot;https://www.linkedin.com/in/victorosorio/&quot;, &quot;picture&quot;=&gt;&quot;/assets/images/me.avif&quot;}</name></author><entry><title type="html">Deixando rastros, ou como usar log</title><link href="https://blog.vepo.dev/posts/deixando-rastros-ou-como-usar-log" rel="alternate" type="text/html" title="Deixando rastros, ou como usar log" /><published>2020-05-14T00:00:00+00:00</published><updated>2020-05-14T00:00:00+00:00</updated><id>https://blog.vepo.dev/posts/15-46-54-deixando-rastros-ou-como-usar-log</id><content type="html" xml:base="https://blog.vepo.dev/posts/deixando-rastros-ou-como-usar-log"><![CDATA[<p><em>Esse post √© necess√°rio para outro que vou escrever‚Ä¶.</em> ü§î</p>

<p>Log √© uma ferramenta muito importante. Se voc√™ √© apenas um desenvolvedor, talvez n√£o saiba a utilidade dele, mas com certeza que cuida da opera√ß√£o do seu software sabe.</p>

<p>Com esse post, quero mostra:</p>
<ol>
  <li>O que √© um log?</li>
  <li>Porque usar log em Java?</li>
  <li>Como usar SLF4J em Java?</li>
  <li>Apresentar um simples benchmark entre implementa√ß√µes do SLF4J.</li>
</ol>

<h1 id="formato-de-arquivo">Formato de Arquivo</h1>

<p>Pra ser bem estrito ao nome <em>log</em> significa registro. E esse tipo de arquivo n√£o √© necessariamente associado a um conte√∫do. H√° inum√©ros outros tipos de log, como por exemplo no Apache Kafka, cada <a href="https://kafka.apache.org/documentation/#intro_topics">partition</a> √© um arquivo de log, h√° base de dados que funcionam basicamente como um log de opera√ß√µes, acredito que o <a href="https://www.datomic.com/">Datomic</a> √© assim.</p>

<p>Na realidade, um arquivo de log √© um arquivo que conter√° registros de algo, que ser√° sempre adicionado ao final do arquivo.</p>

<p>Nesse post vamos tratar de logs de execu√ß√£o. Esses s√£o essenciais para qualquer aplica√ß√£o.</p>

<h1 id="porque-sua-aplica√ß√£o-deve-ter-log">Porque sua aplica√ß√£o deve ter log</h1>

<p>Existem aplica√ß√µes, servidores, <a href="https://www.researchgate.net/publication/323988067_Intelligent_Agents_and_Environment">agentes</a> e scripts. A diferen√ßa entre esses tipos de software est√° no modo como eles s√£o executados.</p>

<h2 id="script">Script</h2>
<p>No caso de script, a execu√ß√£o desse sempre ser√° supervisionada por um desenvolvedor, ou algu√©m de suporte. Normalmente √© executado pela linha de comando e as informa√ß√µes devem ser mostradas no console. Nesse caso n√£o √© necess√°rio um biblioteca de log, a efici√™ncia n√£o √© um problema.</p>

<h2 id="aplica√ß√µes">Aplica√ß√µes</h2>
<p>Aplica√ß√µes √© um que temos instalado no nosso computador ou celular. Quando um erro acontece na aplica√ß√£o tempos duas coisas:</p>
<ol>
  <li>A descri√ß√£o do erro por um usu√°rio mal-humorado</li>
  <li>Um usu√°rio mal-humorado</li>
</ol>

<p>Nesse caso, muitas vezes o que o usu√°rio ir√° descrever pode n√£o ser suficiente para se compreender o erro. Se esse erro ocorrer com um aplicativo de celular‚Ä¶ voc√™ tem uma legi√£o de usu√°rios mal-humarados e s√≥‚Ä¶ Como corrigir o erro?</p>

<p>Nesse caso o log dever√° descrever o estado da aplica√ß√£o e ser√° bastante √∫til para um troubleshooting simples ou a corre√ß√£o do bug.</p>

<h2 id="agentes-e-servidores">Agentes e Servidores</h2>

<p>Ahhh‚Ä¶ E se voc√™ n√£o tem um usu√°rio? Vai dar erro, ningu√©m vai ver‚Ä¶ Voc√™ n√£o vai saber como e onde deu o erro‚Ä¶ Como faz?</p>

<p>Primeiro uma defini√ß√£o, Agentes s√£o softwares inteligentes que s√£o autonomos. Eles n√£o precisam de intera√ß√£o com outros softwares/usu√°rios. Voc√™ pode ver um em a√ß√£o‚Ä¶ <a href="https://diolinux.com.br/2019/07/google-abre-codigo-de-seu-web-crawler.html">o google</a>!</p>

<p>Nesse caso, um log de execu√ß√£o √© essencial. Voc√™ precisa saber o estado atual do seu sistema e se der algum erro, deve ter informa√ß√µes suficientes para compreender o que aconteceu.</p>

<h1 id="uma-biblioteca-para-todos-usarem">Uma biblioteca para todos usarem</h1>

<p>No mundo Java h√° uma grande preocupa√ß√£o com padroniza√ß√£o. Assim at√© se tratando de Log tamb√©m temos uma padr√£o:</p>

<ol>
  <li>N√£o use a biblioteca padr√£o do Java. Porque? <a href="https://stackoverflow.com/questions/11359187/why-not-use-java-util-logging">Porque n√£o oras!</a></li>
  <li>Use SLF4J e escolha a implementa√ß√£o que voc√™ quiser.</li>
</ol>

<p>Com SFL4J voc√™ n√£o precisa fazer quase nenhuma configura√ß√£o em c√≥digo, apenas instanciar em suas classes uma inst√¢ncia do logger.</p>

<h2 id="o-slf4j">O SLF4J</h2>

<p>O <strong>Simple Logging Facade for Java</strong> √© uma biblioteca para abstrair log, assim voc√™ n√£o precisariam ficar preso a uma implementa√ß√£o de biblioteca de log. Quer mudar a biblioteca de log? S√≥ mudar umas linhas no <code class="language-plaintext highlighter-rouge">pom.xml</code>!</p>

<h3 id="configurando-o-slf4j">Configurando o SLF4J</h3>

<p>Para configurar o SLF4J e sua implementa√ß√£o, voc√™ ir√° precisar basicamente:</p>

<ol>
  <li>Adicionar a depend√™ncia <a href="https://mvnrepository.com/artifact/org.slf4j/slf4j-api">slf4j-api</a></li>
  <li>Adicionar uma implementa√ß√£o do SLF4J
    <ol>
      <li>Ou o <a href="https://logging.apache.org/log4j/2.x/">Log4J2</a></li>
      <li>Ou o <a href="http://logback.qos.ch/">Logback</a></li>
      <li>Ou outras <a href="http://www.slf4j.org/manual.html">implementa√ß√µes</a></li>
    </ol>
  </li>
  <li>Instanciar o log e deixar rastros.</li>
</ol>

<p>Basicamente n√£o √© necess√°rio um arquivo de configura√ß√£o, apesar de ser altamente recomend√°vel!</p>

<p>Vou deixar aqui um exemplo n√£o t√£o b√°sico, pois usa o vari√°veis de ambiente para configurar o Log:</p>

<div data-gist="https://gist.github.com/vepo/82b64b6cc23bc5d85f0e05cdbc36603f"></div>

<p>Observe que na linha 21 e 22, estou usando as vari√°veis de ambiente <code class="language-plaintext highlighter-rouge">LOG_LEVEL</code> e <code class="language-plaintext highlighter-rouge">APPENDER</code>, com os respectivos valores padr√£o <code class="language-plaintext highlighter-rouge">DEBUG</code> e <code class="language-plaintext highlighter-rouge">STDOUT</code>. Assim essas configura√ß√µes podem ser alteradas sem a necessidade de uma build! üòé</p>

<p>Agora para instanciar o log:</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">org.slf4j.Logger</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.slf4j.LoggerFactory</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">MyClass</span> <span class="o">{</span>
	<span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="nc">Logger</span> <span class="n">logger</span> <span class="o">=</span> <span class="nc">LoggerFactory</span><span class="o">.</span><span class="na">getLogger</span><span class="o">(</span><span class="nc">MyClass</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>

        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">beHappy</span><span class="o">()</span> <span class="o">{</span>
            <span class="n">logger</span><span class="o">.</span><span class="na">info</span><span class="o">(</span><span class="s">"Yeah!"</span><span class="o">);</span>
            <span class="c1">// being happy!</span>
        <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<h2 id="n√≠veis-de-log">N√≠veis de Log</h2>

<p>Um dos conceitos b√°sicos do log √© o N√≠vel, ele gradua a import√¢ncia da informa√ß√£o sendo registrada.</p>

<p>No SLF4J h√° os seguintes n√≠veis: ERROR, WARN, INFO, DEBUG, TRACE. Sendo o TRACE o menos importante e o ERROR o mais importante.</p>

<p>√â n√≠vel de log deve ser ajustado de acordo com a necessidade, por exemplo. Uma aplica√ß√£o no ambiente de desenvolvimento deve rodar em DEBUG ou TRACE. Uma aplica√ß√£o em ambiente de testes em INFO. J√° uma aplica√ß√£o em produ√ß√£o deve rodar em ERROR ou WARN.</p>

<p>Caso exista um bug em em produ√ß√£o e seja necess√°rio pegar mais logs, a aplica√ß√£o deve ser reiniciada para INFO.</p>

<p>Mas fique atento, mudar o n√≠vel de log pode impactar a performance da aplica√ß√£o.</p>

<h2 id="dicas">Dicas</h2>

<p>√â normal em desenvolvedores menos experientes, criar mensagens com contatena√ß√£o de strings‚Ä¶ Mas isso n√£o √© uma boa pr√°tica, porque em c√≥digo sens√≠veis, pode impactar a performace.</p>

<p>Mas h√° duas maneiras de resolver isso com o SLF4J.</p>

<h3 id="usando-binding">Usando binding</h3>

<p>No SLF4J voc√™ pode resolver esse usando o binding. Voc√™ ir√° ver que as assinaturas dos m√©todos de log aceitam in√∫meros par√¢metros. Cara parametro ser√° associado ao valor <code class="language-plaintext highlighter-rouge">{}</code> na mensagem de log. Assim, caso a mensagem n√£o seja exibida por causa do n√≠vel de log, ser√£o evitada as cria√ß√µes de algumas strings.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">logger</span><span class="o">.</span><span class="na">trace</span><span class="o">(</span><span class="s">"This is a trace message: ctx={} other-var={}"</span><span class="o">,</span> <span class="n">ctx</span><span class="o">,</span> <span class="n">otherVar</span><span class="o">);</span>
</code></pre></div></div>

<h3 id="verificando-n√≠vel-de-log">Verificando N√≠vel de Log</h3>

<p>Caso a mensagem seja realmente complicada, e voc√™ queira formatar ela dignamente‚Ä¶ H√° outra sa√≠da‚Ä¶</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">logger</span><span class="o">.</span><span class="na">debug</span><span class="o">(</span><span class="s">"this is a debug message. If the level is bellow debug, it will not showed"</span><span class="o">);</span>
<span class="k">if</span><span class="o">(</span><span class="n">logger</span><span class="o">.</span><span class="na">isDebugEnabled</span><span class="o">())</span> <span class="o">{</span>
	<span class="n">logger</span><span class="o">.</span><span class="na">debug</span><span class="o">(</span><span class="s">"Some message formatted: value1="</span> <span class="o">+</span> <span class="n">value1</span> <span class="o">+</span> <span class="s">" ctxName="</span> <span class="o">+</span> <span class="n">ctx</span><span class="o">.</span><span class="na">getName</span><span class="o">());</span>
<span class="o">}</span>
</code></pre></div></div>

<h3 id="n√£o-use-chamadas-de-metodos">N√£o use chamadas de metodos</h3>

<p>Uma outra dica √© nunca usar chamadas de m√©todos como par√¢metro! Porque? Porque se o esse log n√£o estiver habilitado, o m√©todo ser√° chamado sempre. Deixe a JVM chamar o <code class="language-plaintext highlighter-rouge">toString</code>. Segue a vida‚Ä¶.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">logger</span><span class="o">.</span><span class="na">debug</span><span class="o">(</span><span class="s">"This is a log registry: ctxName={}"</span><span class="o">,</span> <span class="n">ctx</span><span class="o">.</span><span class="na">getName</span><span class="o">());</span> <span class="c1">// Wrong!</span>
<span class="n">logger</span><span class="o">.</span><span class="na">debug</span><span class="o">(</span><span class="s">"This is a log registry: ctx={}"</span><span class="o">,</span> <span class="n">ctx</span><span class="o">);</span>               <span class="c1">// Better now! Implement .toString correctly</span>
</code></pre></div></div>

<h1 id="benchmark">Benchmark</h1>

<p>Eu fiz um benchmark r√°pido, mas o objetivo dele n√£o √© mostrar qual implementa√ß√£o √© melhor. <a href="http://logback.qos.ch/reasonsToSwitch.html">H√° algumas raz√µes</a> pra se escolher o logback, mas isso fica a sua escolha.</p>

<div class="github-repo">
    <h2>
        <img class="logo" src="/assets/images/plugins/github-logo.png" alt="GitHub logo" loading="lazy" />
        <img class="user" src="https://avatars.githubusercontent.com/u/353569?v=4" loading="lazy" />
        <span class="url">
            <a href="https://github.com/vepo">
                vepo
            </a> 
            /
            <a href="https://github.com/vepo/slf4j-benchmark">
                slf4j-benchmark
            </a>
        </span>
    </h2>
</div>

<p>O ponto central do meu benchmark √© mostrar como o uso do n√≠vel de log impacta na performance.</p>

<p>No meu teste, s√£o feitas 1.000.000 de chamadas ao log. Ent√£o‚Ä¶</p>

<p><img src="https://dev-to-uploads.s3.amazonaws.com/i/1rz55opvxepu63l54sqq.png" alt="Alt Text" /></p>

<p>Podemos ver, que se reduzirmos o n√≠vel de log podemos reduzir o tempo de execu√ß√£o! Isso porque:</p>

<ol>
  <li>Menos c√≥digo √© executado</li>
  <li>N√£o h√° gargalo para escrita (arquivo, console, TCP, etc‚Ä¶)</li>
</ol>

<h1 id="conclus√£o">Conclus√£o</h1>

<p>Nenhum software pode ser executado sem algum tipo de log. Para softwares mais sens√≠veis o log deve ser levado a s√©rio.</p>

<p>Usando corretamente o log, voc√™ n√£o ter√° impacto na performance, e ainda conseguir√° mais informa√ß√µes para troubleshooting e bug fix!</p>

<p>üòé</p>]]></content><author><name>{&quot;twitter&quot;=&gt;&quot;vepo&quot;, &quot;linkedin&quot;=&gt;&quot;https://www.linkedin.com/in/victorosorio/&quot;, &quot;picture&quot;=&gt;&quot;/assets/images/me.avif&quot;}</name></author><category term="Desenvolvimento de Software" /><category term="logging" /><category term="Java" /><category term="SLF4J" /><summary type="html"><![CDATA[Um S√™nior precisa saber usar log... minto! Qualquer desenvolvedor precisar saber usar log. Aqui apresento como usar o SLF4J em Java.]]></summary></entry></feed>
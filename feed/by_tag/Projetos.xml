<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator><link href="https://blog.vepo.dev/feed/by_tag/Projetos.xml" rel="self" type="application/atom+xml" /><link href="https://blog.vepo.dev/" rel="alternate" type="text/html" /><updated>2025-10-07T11:58:40+00:00</updated><id>https://blog.vepo.dev/feed/by_tag/Projetos.xml</id><title type="html">vepo</title><subtitle>Um repositório para todos os posts, palestras e tutoriais que já fiz. Java, Desenvolvimento de Software e reflexões sobre filosofia</subtitle><author><name>{&quot;twitter&quot;=&gt;&quot;vepo&quot;, &quot;linkedin&quot;=&gt;&quot;https://www.linkedin.com/in/victorosorio/&quot;, &quot;picture&quot;=&gt;&quot;/assets/images/me.avif&quot;}</name></author><entry><title type="html">Ágil 101 - O que devo saber?</title><link href="https://blog.vepo.dev/posts/agil-101-o-que-devo-saber" rel="alternate" type="text/html" title="Ágil 101 - O que devo saber?" /><published>2020-10-03T00:00:00+00:00</published><updated>2023-09-25T20:01:00+00:00</updated><id>https://blog.vepo.dev/posts/00-00-00-agil-101-o-que-devo-saber</id><content type="html" xml:base="https://blog.vepo.dev/posts/agil-101-o-que-devo-saber"><![CDATA[<p>Ágil é um adjetivo. Ele descreve uma característica de algo. Mas Ágil não pode vir sozinho, pois seu uso se refere a uma comparação. <em>Um ninja é mais ágil que um lutador de sumô</em>.</p>

<p>Quando falamos de Ágil no mundo do Desenvolvimento de Software estamos falando de um movimento que veio em resposta aos modelos gerenciais predominantes até 2001.</p>

<p><img src="https://dev-to-uploads.s3.amazonaws.com/i/nk0ojzs854v9j83lff1v.png" alt="Significado de Ágil" /></p>

<p>Porque 2001? Porque foi em 2001 que <a href="https://amzn.to/3cYFN94">Kent Back</a> reuniu um pessoal, que muitos não se gostam publicamente hoje, para discutir os Modelos de Desenvolvimento de Software. De lá saiu <a href="https://agilemanifesto.org/iso/ptbr/manifesto.html">um manifesto</a> que se você não o conhece… Bom, ele define o que é Ágil.</p>

<blockquote>
  <p>Estamos descobrindo maneiras melhores de desenvolver software, fazendo-o nós mesmos e ajudando outros a fazerem o mesmo. Através deste trabalho, passamos a valorizar:</p>

  <p><strong>Indivíduos e interações</strong> mais que processos e ferramentas
<strong>Software em funcionamento</strong> mais que documentação abrangente
<strong>Colaboração com o cliente</strong> mais que negociação de contratos
<strong>Responder a mudanças</strong> mais que seguir um plano</p>

  <p>Ou seja, mesmo havendo valor nos itens à direita, valorizamos mais os itens à esquerda.</p>
</blockquote>

<p>Eu vou falar sobre cada item desse manifesto, mas antes precisamos entender como é a gerência de projetos não-ágil e qual a ideia por trás do ágil.</p>

<h1 id="antes-do-ágil-havia-o-pmbok">Antes do Ágil havia o PMBOK</h1>

<p>A disciplina de Gerência de Projetos é bastante complexa e precisamos ter em mente que não há certo e errado. Há padrões e esses padrões podem ser aplicados em contextos. O <a href="https://pt.wikipedia.org/wiki/Project_Management_Body_of_Knowledge">PMBOK</a>, <em>Project Management Body of Knowledge</em>, é bastante útil e é largamente utilizado na indústria e governos. Ele consiste em uma série práticas que vão definir como um projeto deve ser gerenciado. Temos os processos, documentos que devem ser gerados, reuniões que deve ser feitas, etc..</p>

<p>Antes do Ágil, o padrão PMBOK era imposto dentro da empresa. Todos os projetos tinha que seguir exatamente o que estava definido lá. E é lá que temos o famoso Cascata, em que entre a definição do que será entregue e a entrega temos meses onde não há comunicação entre <strong>Equipe de Desenvolvimento</strong> e <strong>Cliente</strong>.</p>

<p>Vale ressaltar que esse modelo é muito bom e funciona para outros tipos de projetos. Pensa bem, o que pode dar errado no meio do caminha da construção de um prédio? Muito diferente da construção de um software.</p>

<h1 id="ideias-por-trás-do-ágil">Ideias por trás do Ágil</h1>

<p>Antes que você pense que o Ágil foi uma revolução, não. Nos anos 90, o que aconteceu foi que ideias que já existiam de administração começaram a ser aplicada em Desenvolvimento de Software.</p>

<h2 id="lean">LEAN</h2>

<p>Um das ideias bem óbvias no Ágil e que passa despercebido por quem não conhece é a influencia do livro <a href="https://amzn.to/2SqxVDO">Toyota Kata: Gerenciando Pessoas para Melhoria, Adaptabilidade e Resultados Excepcionais </a> (<em>nunca li</em>). Observe o que é dito nos apendices do livro <a href="https://amzn.to/3cWxjPy">O Projeto Fênix</a>:</p>

<blockquote>
  <p>As liçoes do Sr. Rother foram codificadas no livro <em>Toyota Kata</em>, que estrutura o processo de planejamento e cultura que deve existir para permitir o ciclo PDCA Lean (Planejar, Fazer, Verificar, Agir). Acredito que essa seja uma das contribuições mais extraordinárias para o mundo da melhoria dos processos.
A manifestação mais óbvia do <em>Toyota Kata</em> é o ciclo de melhoria de duas semanas, no qual cada supervisor de centro de trabalho deve melhorar algo (qualquer coisa!) a cada duas semanas. Para citar o Sr. Rother, “A prática do kata é o ato de praticar um padrão para que ele se torne uma segunda natureza. Em sua gestão diária, a Toyota ensina uma maneira de trabalhar - um kata - que tem ajudado a torná-la muito bem-sucedida nas últimas décadas.</p>
</blockquote>

<p>Podemos ver claramente dois pontos aqui óbvios:</p>
<ul>
  <li>Ciclo de duas semanas</li>
  <li>Para cada letra do LEAN (PDCA em Português), tem uma reunião no SCRUM.</li>
</ul>

<h2 id="gestão-da-equipe">Gestão da Equipe</h2>

<p>A Gestão de uma Equipe também é baseada em ideias que vem de livros influentes. O SCRUM vai tentar resolver os problemas levantados no livro <a href="https://amzn.to/30v0rbI">Os 5 desafios das equipes</a> (<em>não li também</em>). Observe o que é dito nos apendices do livro <a href="https://amzn.to/3cWxjPy">O Projeto Fênix</a>:</p>

<blockquote>
  <p>Em seu modelo, as cincos disfunções são descritas como:</p>
  <ul>
    <li>Ausência de confiança - relutância em ser vulnerável dentro do grupo</li>
    <li>Medo de conflito - buscando harmonia artificial sobre debate fervoroso construtivo</li>
    <li>Falta de comprometimento - fingir comprar as decisões do grupo cria uma ambiguidade na organização</li>
    <li>Evitação de responsabilidade - desviar da responsabilidade para chamar a atenção dos colegas sobre comportamento contraprodutivo, que estabelece padrões baixos</li>
    <li>Desatenção aos resultados - focar no sucesso pessoal, status e ego antes do sucesso da equipe</li>
  </ul>
</blockquote>

<p>Cada ponto desse é direcionado por alguma prática do SCRUM ou XP. Em uma simples descrição da equipe desejada pelo SCRUM, há muita teoria de administração de equipes.</p>

<h1 id="o-manifesto">O Manifesto</h1>

<p>Para se por em prática o Manifesto Ágil, é preciso ser um gestor e ter poder sobre os processo da empresa. PONTO FINAL. Não é possível uma equipe decidir ser ágil, sem contar com a boa vontade da empresa, mesmo que a empresa ganhe com essa mudança cultura.</p>

<p>O Manifesto Ágil na verdade propõe uma inversão de valores corporativos. Ao invês de seguir os processos da empresa, cada equipe vai decidir o que fazer com a intenção de entregar mais valor mais rapidamente. Isso é uma resposta ao engessado PMBOK. Quando se assina um contrato para um projeto, todos os requisitos propostos DEVEM ser entregues. Isso pode implicar muitas horas extras caso haja algum imprevisto. Ou pode levar a não aceitação do produto pelo cliente, muitas vezes o cliente percebe que o que foi pedido não é o que se realmente deseja. Isso é comum, sem estresses.</p>

<p>Então para se colocar em prática um framework Ágil, deve-se primeiro mudar a forma de se assinar os contratos. Não se pode vender um produto com homens/hora, escopo fechado. Tem que se vender um projeto com iterações e escopo aberto. Vamos começar a desenvolver o projeto X que inicialmente está previsto para 5 Sprints. Todos os documentos assinado entre Empresa e Cliente deve ser completamente diferentes.</p>

<h2 id="indivíduos-e-interações-mais-que-processos-e-ferramentas"><strong>Indivíduos e interações</strong> mais que processos e ferramentas</h2>

<p>Em um ambiente Ágil, a equipe terá mais autonomia que em outros contextos. Os membros dessa equipe decidirão se vão executar o framework proposto (<em>viu que não falei processo?</em>) ou se vão adaptar. O próprio Framework Scrum não se denomina processo por esse motivo, caso a equipe decida que alguma prática deve ser alterada, sem estresse!</p>

<p>Muito das reuniões propostas pelo Scrum são denominadas rituais, porque eles devem ser executados como rotina, serem inseridos na cultura. Eles tem valores inseridos nele. Por exemplo, a Retrospectiva deve ser para reavaliar se o próximo Sprint deve ter melhorias. Lembra do processo de melhoria continua do LEAN?</p>

<p>Obviamente que a equipe deverá seguir alguns padrões da empresa. Não dá pra simplesmente jogar fora a ferramenta de Solicitação de Mudança da empresa e usar uma nova. Mas a maneira de se usar deve ser menos impositiva.</p>

<h2 id="software-em-funcionamento-mais-que-documentação-abrangente"><strong>Software em funcionamento</strong> mais que documentação abrangente</h2>

<p>Em projetos PMBOK havia muito tempo gasto em escrita de documentação. Havia o documento de Requisitos, Arquitetura e Testes. Cada um era escrito e validado antes do desenvolvimento e deviam ser validados de acordo com a entrega.</p>

<p>Em um contexto Ágil, o Software em funcionamento tem mais valor. No SCRUM, uma reunião de Review vale mais do que um documento de Requisito. E provavelmente é mais barato fazer um reunião de Review a cada 2 semanas do que escrever um documento de requisitos gigantesco a cada 3 meses.</p>

<p>Que fique claro uma coisa, o software deve ser documentado, o que pode não ser documentado é os contratos de requisitos com o cliente. Caso seu projeto não use uma Wiki interna (ou coloca no repositório de código mesmo) para documentar arquitetura, vamos começar agora! Abre um README.md e coloca todos os pressupostos arquiteturais agora!</p>

<p>O mais claro desse ponto é dizer: mais vale um teste automático do que um documento de testes em <code class="language-plaintext highlighter-rouge">.docx</code>.</p>

<h2 id="colaboração-com-o-cliente-mais-que-negociação-de-contratos"><strong>Colaboração com o cliente</strong> mais que negociação de contratos</h2>

<p>O Cliente deve ser envolvido em todo o processo de desenvolvimento. Se não puder participar das reuniões diárias (<em>nem é bom participar…</em> 😳), deve participar das reuniões de Review! Cada requisito tem que ser validado com o cliente, mostrado e discutido. A decisão é dele e as vezes a opinião dele muda muito rapidamente.</p>

<p>O que acontecia com o PMBOK é que todo o projeto estava detalhado na documentação e deveria ser entregue conforme a documentação. Era esse o contrato. A comunicação com o cliente se dava somente para informar se o projeto está em dia ou atrasado, e muitas vezes as horas extras eram escondidas do cliente. <em>Vamos fazer uma banco de horas que próximo mês nós tiramos</em>. Em meu primeiro projeto acumulei 72hs em apenas 2 meses e acabei tirando todas essas horas nos 2 meses seguintes.</p>

<p>No contexto Ágil, o projeto não deve ser encarado como algo fechado que é contratado e deve ser entregue. Isso pode ser válido para construção de um prédio, mas para construção de software não é possível. Há muito mais volatilidade dos requisitos. O cliente deve ser envolvido em todo o processo.</p>

<h2 id="responder-a-mudanças-mais-que-seguir-um-plano"><strong>Responder a mudanças</strong> mais que seguir um plano</h2>

<p>Mudanças vão ocorrer! Toda a disciplina de Engenharia de Software já leva em conta que o Cliente não sabe o que quer, ou se sabe, pode ser que sua necessidade mude.</p>

<p>É comum ver desenvolvedores reclamando que o cliente nunca sabe o que querem. É por isso que são chamado de <strong>desenvolvedores</strong> e não <strong>engenheiros</strong> de software! 😏</p>

<p>Por isso que uma equipe ágil deve ter um <em>backlog</em> e deve gerenciar esse <em>backlog</em> muito bem! Ele deve ser repriorizado a cada iteração. Lembre-se o foco deve ser entregar valor ao cliente!</p>

<p>Mas muito cuidado! Deve ser feito um Gerenciamento de Débito Técnico! Não é possível construir um software respondendo a mudanças rapidamente, mas deixando muita sujeira pra trás… O nome disso não é Ágil! É <a href="https://gohorseprocess.com.br/extreme-go-horse-xgh/">eXtreme Go Horse (XGH)</a>!</p>

<p><img src="https://dev-to-uploads.s3.amazonaws.com/i/l9r1nuqctxpvgw9jf7l6.png" alt="Logo do eXtreme Go Horse" /></p>

<h1 id="conclusão">Conclusão</h1>

<p>Acabei de apresentar quais são os principios do Ágil. Agora cabe a você usar bem esses conceitos. Os Frameworks Ágeis são baseados em Times autogerenciaveis, isso é uma das bases.</p>

<p>Eu nunca tive contato com um agilista, mas caso você tenha veja se ele está aplicando esses conceitos. Caso não esteja, é hora de ter uma conversa séria com o gerente! É muito complicado se criar uma função para garantir o ágil… Parece contraditório.</p>

<p>Há outros temas que o Ágil habilitou, porém são temas completamente diferentes. Você viu que todas as citações usadas foram de um livro de DevOps? Pois é, o Ágil possibilitou o DevOps. E este é nada mais nada menos do que a aplicação de conceitos ágil no suporte. Outro tema foi Microsserviços… Mas é muito tema para pouca letra…</p>

<p>Desejo que você aplique esse conhecimento no seu projeto e que ele seja um sucesso! 😉</p>

<h1 id="leituras-recomendadas">Leituras Recomendadas</h1>

<ul>
  <li><a href="https://amzn.to/33tCZ0p">O Projeto Fênix: um Romance Sobre TI, DevOps e Sobre Ajudar o seu Negócio a Vencer</a></li>
  <li><a href="https://amzn.to/2GnW7nF">Microsserviços Prontos Para a Produção: Construindo Sistemas Padronizados em uma Organização de Engenharia de Software</a></li>
</ul>

<hr />

<p><img src="https://dev-to-uploads.s3.amazonaws.com/i/9fwzsz0n0f3aq9h4xzzs.jpg" alt="Trem em alta velocidade" /></p>

<p>Foto de <a href="https://www.pexels.com/pt-br/foto/agil-alta-velocidade-assento-banco-1285618/"><strong>Essow Kedelina</strong></a> no <strong>Pexels</strong></p>]]></content><author><name>{&quot;twitter&quot;=&gt;&quot;vepo&quot;, &quot;linkedin&quot;=&gt;&quot;https://www.linkedin.com/in/victorosorio/&quot;, &quot;picture&quot;=&gt;&quot;/assets/images/me.avif&quot;}</name></author><category term="Agil" /><category term="Projetos" /><category term="SCRUM" /><category term="Metodologia" /><summary type="html"><![CDATA[O que devo saber sobre Ágil? Como começou e quais são os princípios básicos? Explico tudo nesse post!]]></summary></entry></feed>
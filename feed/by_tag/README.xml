<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator><link href="https://blog.vepo.dev/feed/by_tag/README.xml" rel="self" type="application/atom+xml" /><link href="https://blog.vepo.dev/" rel="alternate" type="text/html" /><updated>2025-10-07T11:58:40+00:00</updated><id>https://blog.vepo.dev/feed/by_tag/README.xml</id><title type="html">vepo</title><subtitle>Um reposit√≥rio para todos os posts, palestras e tutoriais que j√° fiz. Java, Desenvolvimento de Software e reflex√µes sobre filosofia</subtitle><author><name>{&quot;twitter&quot;=&gt;&quot;vepo&quot;, &quot;linkedin&quot;=&gt;&quot;https://www.linkedin.com/in/victorosorio/&quot;, &quot;picture&quot;=&gt;&quot;/assets/images/me.avif&quot;}</name></author><entry><title type="html">Inicie um projeto pelo README.md</title><link href="https://blog.vepo.dev/posts/inicie-um-projeto-pelo-readme" rel="alternate" type="text/html" title="Inicie um projeto pelo README.md" /><published>2021-03-26T00:00:00+00:00</published><updated>2021-03-26T00:00:00+00:00</updated><id>https://blog.vepo.dev/posts/08-51-00-inicie-pelo-readme</id><content type="html" xml:base="https://blog.vepo.dev/posts/inicie-um-projeto-pelo-readme"><![CDATA[<p>Quando comecei a trabalhar oficialmente como Arquiteto de Software, identifiquei uma grande defici√™ncia: <em>documentar</em>. Documentar n√£o √© uma atividade f√°cil, e voc√™ pode sentir essa dor ao usar qualquer software, biblioteca ou framework propriet√°rio ou open source. Investi parte do meu tempo para <a href="https://www.amazon.com.br/Documenting-Software-Architectures-Views-Beyond/dp/0321552687?__mk_pt_BR=%C3%85M%C3%85%C5%BD%C3%95%C3%91&amp;crid=2LKF8X7AVG95S&amp;dchild=1&amp;keywords=documenting+software+architectures&amp;qid=1616765005&amp;sprefix=documenting+so%2Caps%2C299&amp;sr=8-1&amp;linkCode=ll1&amp;tag=vepo0f-20&amp;linkId=526aaf0393ca484d229ae901a6ab7cfb&amp;language=pt_BR&amp;ref_=as_li_ss_tl">ler sobre</a> o assunto e praticar tanto nos meus projetos pessoais quanto da empresa que trabalhava.</p>

<p>Pela minha pr√≥pria experi√™ncia, posso afirmar que praticar √© uma boa t√°tica. Documentar n√£o √© uma atividade natural para nenhum desenvolvedor, muitas vezes supomos que as coisas s√£o obvias e quem vai usar nosso software ir√° compreender o que est√° feito imediatamente. As vezes quando chega uma pergunta, sempre vem aquele pensamento <em>‚ÄúComo ele √© burro?‚Äù</em>, mas isso deve ser evitado. Nenhum usu√°rio √© burro, ele s√≥ n√£o compreendeu o que est√° posto.</p>

<p>Vale uma reflex√£o aqui‚Ä¶ Quantas horas voc√™ j√° gastou tentando entender alguma coisa? Pode ser que seja a implementa√ß√£o mais simples que existe, mas se existe um conceito (ou uma conven√ß√£o) desconhecido, voc√™ n√£o ir√° compreender. John Ousterhout em seu livro <a href="https://www.amazon.com.br/Philosophy-Software-Design-2nd-English-ebook/dp/B09B8LFKQL?keywords=Philosophy-Software-Design-English&amp;qid=1667927943&amp;sr=8-5&amp;ufe=app_do%3Aamzn1.fos.6121c6c4-c969-43ae-92f7-cc248fc6181d&amp;linkCode=ll1&amp;tag=vepo0f-20&amp;linkId=191bf91d38700ad4d84885900b3b695a&amp;language=pt_BR&amp;ref_=as_li_ss_tl">A Philosophy of Software Design</a> chama isso de <em>Unknown unknowns</em>, Desconhecido desconhecidos em tradu√ß√£o livre. Falei um pouco sobre complexidade e da experi√™ncia da leitura desse livro em <a href="https://vepo.substack.com/p/sobre-design-de-software-i">Sobre Design de Software (I): O que √© complexidade?</a>.</p>

<p>Ent√£o em Junho de 2019 coloquei no papel o que tinha em mente <a href="https://blog.vepo.dev/posts/start-a-project-by-the-readme">Start a project by the README</a>. Est√° em ingl√™s porque precisava praticar minha escrita. üôÉ</p>

<p>Aqui vou revisitar o post e expandir ele, muita coisa muda em 3 anos.</p>

<h2 id="documenta√ß√µes-nem-sempre-s√£o-boas">Documenta√ß√µes nem sempre s√£o boas</h2>

<p>Para escrever boas documenta√ß√µes, a primeira coisa que temos que fazer √© ler documenta√ß√µes. Depois temos que ter um conceito claro do que √© uma boa documenta√ß√£o. Quais s√£o as caracteristicas delas? Se n√£o pararmos para refletir nisso, provavelmente nunca conseguiremos escrever uma.</p>

<p>Boas documenta√ß√µes s√£o aquelas onde as d√∫vidas s√£o facilmente resolvidas, elas s√£o bem estruturadas e o programador n√£o se perde. Logo no come√ßo ela deve definir o que √© e para o que se prop√µe aquele componente. Assim um desenvolvedor perdido n√£o ir√° gastar tempo lendo o que n√£o se precisa.</p>

<h3 id="vamos-mostrar-um-exemplo">Vamos mostrar um exemplo?</h3>

<p>Em 2017 eu precisava fazer um benchmark de todos Messages Queue que existiam no mercado, assim fazendo o levantamento cai no ZeroMQ. Logo ao abrir sua p√°gina inicial li <em>‚Äúconnecta seu c√≥digo em qualquer linguagem ou plataforma‚Äù</em>, com essa informa√ß√£o eu poderia supor eu poderia usar ele como um middleware, logo comecei a ler e n√£o cheguei a nenhuma conclus√£o. Voc√™ pode tentar navegar na documenta√ß√£o dele <a href="https://web.archive.org/web/20170223010343/http://zeromq.org/">em 2017</a> pra ver se entende.</p>

<p><img src="/assets/images/zeromq/2017-description.jpg" alt="Descri√ß√£o do ZeroMQ em 2017" /></p>

<p>Agora vamos olhar a <a href="https://web.archive.org/web/20210324125900/https://zeromq.org/">documenta√ß√£o de 2021</a>. Observe que a primeira frase diz <em>‚ÄúZeroMQ (tamb√©m conhecido como √òMQ, 0MQ ou zmq) parece uma biblioteca de comunica√ß√£o, mas atua como um framework de concorr√™ncia.‚Äù</em>. J√° na primeira frase, muitas d√∫vidas s√£o retiradas:</p>

<ul>
  <li>Quais s√£o os nomes que podemos chamar</li>
  <li>Ela n√£o √© apenas uma biblioteca para um middleware</li>
  <li>Ela √© um framework para se construir a comunica√ß√£o entre dois servi√ßos, em outras palavras, n√£o existe middleware, voc√™ precisa construir.</li>
</ul>

<p>Se eu tivesse lido essa documenta√ß√£o em 2017, teria economizado algumas horas. √â muito importante que as pessoas n√£o percam tempo lendo a documenta√ß√£o do seu componente, porque isso gera antipatia e √© tudo que n√£o precisamos. Se evitarmos que a pessoa invista tempo investigando, com certeza ela ir√° lembrar do seu componente quando realmente precisar dele.</p>

<p><img src="/assets/images/zeromq/2021-description.jpg" alt="Descri√ß√£o do ZeroMQ em 2021" /></p>

<h2 id="dicas">Dicas</h2>

<p>Vamos ent√£o dar dicas f√°ceis para que sua documenta√ß√£o seja de qualidade. Vamos elencar 5 dicas:</p>

<ol>
  <li>Inicie descrevendo seu componente</li>
  <li>Explique as motiva√ß√µes dele</li>
  <li>Defina os termos que voc√™ ir√° usar</li>
  <li>Explique o comportamento e as intera√ß√µes</li>
  <li>Descreva como usar</li>
</ol>

<p>Vale lembrar que essas s√£o dicas para quem vai <em>usar</em> seu componente, no futuro farei uma lista com dicas para quem vai <em>alterar</em> seu componente.</p>

<h3 id="1-inicie-descrevendo-seu-componente">1. Inicie descrevendo seu componente</h3>

<p>Seja direto. Descreva seu componente de forma simples e direta.</p>

<p>Nas primeiras senten√ßas voc√™ tem que fazer com que qualquer desenvolvedor que caia desavisado sabia onde usar seu componente. Vamos ver alguns exemplos?</p>

<h4 id="um-bom-example">Um bom example</h4>

<p>Um bom exemploe √© a documenta√ß√£o do <a href="http://zookeeper.apache.org/">Zookeeper</a>. Vemos ver o que est√° escrito?</p>

<blockquote>
  <p>Apache ZooKeeper is an effort to develop and maintain an open-source server which enables highly reliable distributed coordination.</p>
  <h5 id="what-is-zookeeper">What is ZooKeeper?</h5>
  <p><em>ZooKeeper is a centralized service for maintaining configuration information, naming, providing distributed synchronization, and providing group services.</em></p>
</blockquote>

<p>Na primeira linha voc√™ j√° tem uma ideia do problema que ele se prop√µe a resolver. Se voc√™ continuar lendo vai encontrar um lista completa dos <a href="https://zookeeper.apache.org/doc/current/zookeeperUseCases.html">casos de uso</a>. Isso √© muito bom! J√° d√° pra ter uma boa vis√£o do que √© poss√≠vel fazer com ele.</p>

<h4 id="um-exemplo-ruim">Um exemplo ruim</h4>

<p>Um exemplo n√£o t√£o bom foi a documenta√ß√£o do <a href="https://web.archive.org/web/20190711233550/https://kafka.apache.org/intro">Apache Kafka</a> quando eu escrevi o primeiro post. Ele descrevia o Kafka como:</p>

<p><em>Apache Kafka¬Æ is a distributed streaming platform. What exactly does that mean?</em></p>

<p>Porque essa document√£o n√£o √© clara? Porque ela n√£o define os termos. Um leitor desavisado n√£o vai entender o real proposito dela. √â preciso primeiro definir os conceitos. Seria o Kafka um Pub/Sub? O que difere um Stream de simplesmente mensagens? Se voc√™ continuar, ele vai usar termos como <em>pipelines</em> e <em>clusters</em> sem definir eles. Mas qual √© o real proposito do Kafka? Porque o Kafka √© mais do que um Message Queue? Vale a penas usar o Kafka apenas como Message Queue?</p>

<p>Eu resumiria tudo isso em uma √∫nica frase: <em>Apache Kafka foi construido ser a Fonte da Verdade de sistemas reativos. Muito al√©m de um simples Pub/Sub, √© poss√≠vel todo um ecosistema orientado a eventos com baixo acoplamento, alta escalabildade e estabildidade.</em></p>

<p>Observe que eu tentei responder duas perguntas b√°sicas <strong>O que √©</strong> e <strong>Que tipo de problema resolve</strong>. Al√©m disso acabei respondendo <strong>O que n√£o √©</strong>.</p>

<h4 id="dicas-1">Dicas</h4>

<ol>
  <li>Evite usar seus pr√≥prios termos.</li>
  <li>Seja direto. Poucas linas.</li>
  <li>Responde as principais quest√µes.</li>
</ol>

<h4 id="tl-dr">TL; DR;</h4>
<p>Uma boa descri√ß√£o √© um texto curto que responde a duas quest√µes. O que √© e Que tipo de problema resolve;</p>

<h3 id="2-explique-as-motiva√ß√µes-dele">2. Explique as motiva√ß√µes dele</h3>

<p>Um segundo passo √© descrever quais s√£o as motiva√ß√µes do seu componente. Isso deve ir muito al√©m do problema que ele resolve, deve se explicar os principais motivos que incentivaram o desenvolvimento de um novo componente.</p>

<p>Vamos supor um caso, voc√™ quer criar um novo Server Render Framework, mas esse ser√° diferente dos demais, o servidor far√° a renderiza√ß√£o do template e do c√≥digo javascript. Esses templates ser√£o usados em tempo de execu√ß√£o com algumas fun√ß√µes que s√£o chamadas via REST. Para que isso acontece, o desenvolvedor deve declarar qual √© o escopo de cada c√≥digo. Um desenvolvedor deve conhecer essa motiva√ß√£o, sen√£o ele ser√° tentado a criar os templates para cada dela, sem separar responsabilidades de cada componente.</p>

<p>Eu normalmnente crio uma sess√£o no meu README.md chamada <strong>Racional</strong>, onde descrevo as principais for√ßas que me levaram a escolher alguns detalhes arquiteturais. Por exemplo, uma vez desenvolvi uma engine de Regras de Neg√≥cio que tinha um XML para descrever a regra de neg√≥cio que era associado a um classpath. Eu detalhei isso explicando os motivos, usava XML para que os times de neg√≥cio pudesse validar o que estava sendo feito podendo eles alterarem sem alterar c√≥digo Java. Logo, qualquer desenvolvedor saberia que o XML poderia ser inspecionado por um n√£o desenvolvedor, assim ele tinha por obriga√ß√£o criar um XML que expressasse a regra, ao inv√™s de encapsular tudo isso dentro do c√≥digo Java.</p>

<h4 id="tl-dr-1">TL; DR;</h4>

<p>Qualquer idea importante <strong>DEVE</strong> ser descrita brevemente. Se mais informa√ß√µes √© necess√°ria, pode-se criar um link para o local onde ela √© descrita por completo.</p>

<h3 id="3-defina-os-termos-que-voc√™-ir√°-usar">3. Defina os termos que voc√™ ir√° usar</h3>

<p>Cada software tem seus termos com seus pr√≥prios significados. O <a href="https://docs.mongodb.com/manual/core/document/">MongoDB</a> fala de documentos e n√£o s√£o os mesmo documentos do <a href="https://poi.apache.org/">Apache POI</a>. O <a href="https://kafka.apache.org/documentation/streams/">Apache Kafka</a> fala de Stream, mas n√£o √© o mesmo definido pela biblioteca padr√£o do <a href="https://docs.oracle.com/javase/8/docs/api/java/util/stream/Stream.html">Java</a>.</p>

<p>Sua documenta√ß√£o deve definir esses conceitos de maneira clara. H√° algum termo que voc√™ comum que voc√™ usa com outro sentido? Vale apena definir ele? Cria uma sess√£o para isso. Explique <em>o que √©</em> e <em>o que n√£o √©</em> esse termo.</p>

<p>O livro <a href="https://www.amazon.com.br/Domain-Driven-Design-Eric-Evans/dp/8550800651?__mk_pt_BR=%C3%85M%C3%85%C5%BD%C3%95%C3%91&amp;crid=1D2KUNV054DKA&amp;dchild=1&amp;keywords=domain+driven+design&amp;qid=1616796613&amp;sprefix=domain+d%2Caps%2C319&amp;sr=8-1&amp;linkCode=ll1&amp;tag=vepo0f-20&amp;linkId=3386cdec4271f3774f6cfa591c57224d&amp;language=pt_BR&amp;ref_=as_li_ss_tl">Domain-Driven Design: atacando as complexidades no cora√ß√£o do software</a> tr√°s um conceito que acho bastante interessante. Ele chama de Linguagem Onipresente. Ela √© as defini√ß√µes dos termos comuns usadas no contexto de um projeto, se voc√™ est√° criando uma biblioteca, voc√™ tamb√©m pode criar termos. Comece definindo eles, depois use em toda a documenta√ß√£o e c√≥digo.</p>

<h3 id="4-explique-o-comportamento-e-as-intera√ß√µes">4. Explique o comportamento e as intera√ß√µes</h3>

<p>Como as coisas acontecem? Como as coisas se relacionam? Isso tamb√©m deve ser descrito pela sua documenta√ß√£o.</p>

<p>Um dos projetos Jakarta EE que eu mais gosto √© o <a href="http://cdi-spec.org/">Java CDI</a>, ele possibilita um baixo acoplamento em projetos Java. Mas‚Ä¶ Ao usar ele, muitas coisas podem parecer m√°gica. Ao implementar meu primeiro <em>CDI Bean</em>, eu fiquei me perguntando quem cria os objetos? Isso n√£o est√° respondido na documenta√ß√£o, mas √© o CDI Container.</p>

<p>Se eu fosse reescrever a documenta√ß√£o do Java CDI, iria fazer um pequeno diagrama com o ciclo de vida de um objeto. Al√©m disso, iria usar o termo Beans Gerenciado (Managed Beans) largamente no texto, para que o desenvolvedor saiba que quem controla o Ciclo de Vida desse objeto √© o pr√≥prio framework e n√£o o meu c√≥digo.</p>

<h3 id="5-descreva-como-usar">5. Descreva como usar</h3>

<p>Voc√™ fornece uma API REST? Uma biblioteca Java? Uma biblioteca C? Descreva como usar cada funcionalidade da API fornecida. Seja breve, por√©m extenso! Uma dica √© criar uma lista de funcionaldiades e Code Snippets.</p>

<h4 id="seja-breve">Seja Breve!</h4>

<p>No seu README voc√™ deve ser breve, n√£o se alongue muito. Coloque apenas o principal uso e um exemplo simples, depois link uma p√°gina com a lista detalhada. Mas d√™ prefer√™ncia a usar um indice, nesse √© melhor usar um <a href="https://asciidoc.org/">AsciiDoc</a> ao inv√©s de um <a href="https://www.markdownguide.org/">Markdown</a>. Use um <strong>Snippets.adoc</strong> ao inves de um <strong>Snippets.md</strong>.</p>

<h4 id="seja-consistente">Seja consistente!</h4>

<p>Considere a documenta√ß√£o como parte do seu c√≥digo. Na verdade ela √©!</p>

<p>Qualquer altera√ß√£o que voc√™ fizer, procure se ela altera algum ponto na documenta√ß√£o.</p>

<p>Qualquer nova funcionalidade que voc√™ adiciona, descreve ela na documenta√ß√£o.</p>

<p>No SCRUM temos o conceito de <a href="https://www.agilealliance.org/glossary/definition-of-done"><strong>Defini√ß√£o de Pronto</strong></a>, entre em acordo com seu time que para que uma tarefa seja conclu√≠da, a documenta√ß√£o deve refletir as altera√ß√µes.</p>

<p>Inconsist√™ncias s√£o muito perigosas, elas podem levar a erros de uso ou bugs que podiam ser facilmente evit√°veis, mas √© muito dif√≠cil de achar.</p>

<h2 id="concluindo">Concluindo</h2>

<p>Quando voc√™ ouvir que <strong>o c√≥digo √© a documenta√ß√£o</strong>, tenha muito ao usar esse c√≥digo. voc√™ n√£o conhece a inten√ß√£o de quem fez. C√≥digo descreve apenas comportamento, n√£o descreve a inten√ß√£o de quem o fez. Cada linha de c√≥digo pode ter algo escondido que trar√° muitoa complexidade ou quem sabe bugs escondidos.</p>

<p>Aqui quero at√© expressar em como discordo do Uncle Bob sobre Coment√°rios e Documenta√ß√£o. Ele sempre expressa que o c√≥digo deve ter todas as respostas. Eu acho essa opini√£o fundamentalistas, o c√≥digo deve ter muitas respostas, mas deve existir documenta√ß√£o para explicar os conceitos do c√≥digo.</p>

<p>A ideia do Uncle Bob √© bem aceita em projetos simples, mas e se o projeto tiver algumas decis√µes arquitet√¥nicas complexas? Como posso express√°-lo sem um README ou alguns coment√°rios?</p>

<h2 id="mais">Mais</h2>

<p>Voc√™ pode adicionar o que quiser ao seu README.md. Seja livre!</p>]]></content><author><name>{&quot;twitter&quot;=&gt;&quot;vepo&quot;, &quot;linkedin&quot;=&gt;&quot;https://www.linkedin.com/in/victorosorio/&quot;, &quot;picture&quot;=&gt;&quot;/assets/images/me.avif&quot;}</name></author><category term="Documenta√ß√£o de Software" /><category term="README" /><category term="Documenta√ß√£o" /><category term="Engenharia de Software" /><summary type="html"><![CDATA[Antes de iniciar a desenvolver, descreva o que voc√™ vai fazer]]></summary></entry></feed>